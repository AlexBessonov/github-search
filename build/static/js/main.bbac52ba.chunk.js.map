{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oPAGaA,EAAS,kBACnB,yBAAKC,UAAU,kDACZ,yBAAKA,UAAU,gBAAf,iBAGA,wBAAIA,UAAU,cACX,wBAAIA,UAAU,YACX,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIF,UAAU,YAAhC,+CAEH,wBAAIA,UAAU,YACX,kBAAC,IAAD,CAASE,GAAG,SAASF,UAAU,YAA/B,oE,OCXCG,EAAeC,0BCAfC,EAAgBD,0BCEhBE,EAAS,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAEnBC,EAAQC,qBAAWR,GACnBS,EAASD,qBAAWN,GAgB1B,OACG,yBAAKL,UAAU,cACZ,2BACGa,KAAK,OACLb,UAAU,eACVc,YAAY,yIACZN,MAAOA,EACPO,SAAU,SAAAC,GAAK,OAAIP,EAASO,EAAMC,OAAOT,QACzCU,WAtBQ,SAAAF,GACI,UAAdA,EAAMG,MAIVP,EAAOQ,aAEHZ,EAAMa,QACPX,EAAMY,OACNV,EAAOW,OAAOf,EAAMa,SAEpBX,EAAMc,KAAK,mKChBPC,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACjB,yBAAK1B,UAAU,QACZ,yBAAK2B,IAAKD,EAAKE,WAAYC,IAAKH,EAAKI,MAAO9B,UAAU,iBACtD,yBAAKA,UAAU,aACZ,wBAAIA,UAAU,cAAc0B,EAAKI,OACjC,kBAAC,IAAD,CAAM5B,GAAI,YAAcwB,EAAKI,MAAO9B,UAAU,mBAA9C,iDCJI+B,EAAO,WAAO,IAAD,EACIpB,qBAAWN,GAA9B2B,EADe,EACfA,QAASC,EADM,EACNA,MAEjB,OACG,kBAAC,WAAD,KACG,kBAAC,EAAD,MACA,yBAAKjC,UAAU,OACXgC,EACI,uBAAGhC,UAAU,eAAb,uDACAiC,EAAMC,KAAI,SAAAR,GAAI,OACb,yBAAK1B,UAAU,gBAAgBmB,IAAKO,EAAKS,IACtC,kBAAC,EAAD,CAAMT,KAAMA,WCdpBU,EAAQ,WAClB,OACG,6BACG,yBAAKpC,UAAU,aACZ,yBAAKA,UAAU,aACZ,wBAAIA,UAAU,aAAd,gEACA,uBAAGA,UAAU,QAAb,qGAAsC,8CCNxCqC,EAAQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACjB,kBAAC,IAAMC,SAAP,KACID,EAAMJ,KAAI,SAAAM,GAAI,OACZ,yBAAKxC,UAAU,YAAYmB,IAAKqB,EAAKL,IAClC,yBAAKnC,UAAU,aACZ,4BACG,uBACGyC,KAAMD,EAAKE,SACXzB,OAAO,SACP0B,IAAI,uBACLH,EAAKI,cCPbC,EAAU,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACiBnC,qBAAWN,GAAtD0C,EAD0B,EAC1BA,QAASC,EADiB,EACjBA,SAAUhB,EADO,EACPA,QAASN,EADF,EACEA,KAAMY,EADR,EACQA,MACnCW,EAAUH,EAAMI,OAAON,KAQ7B,GANAO,qBAAU,WACPJ,EAAQE,GACRD,EAASC,KAEV,IAEEjB,EACD,OAAO,uBAAGhC,UAAU,eAAb,uDAXuB,IAe9B4C,EAKClB,EALDkB,KAAMQ,EAKL1B,EALK0B,QAASxB,EAKdF,EALcE,WACfyB,EAIC3B,EAJD2B,SAAUC,EAIT5B,EAJS4B,IAAKC,EAId7B,EAJc6B,KACfzB,EAGCJ,EAHDI,MAAOY,EAGNhB,EAHMgB,SAAUc,EAGhB9B,EAHgB8B,UACjBC,EAEC/B,EAFD+B,UAAUC,EAEThC,EAFSgC,aACVC,EACCjC,EADDiC,aAGH,OACG,kBAAC,WAAD,KACG,kBAAC,IAAD,CAAMzD,GAAG,IAAIF,UAAU,gBAAvB,2DAEA,yBAAKA,UAAU,aACZ,yBAAKA,UAAU,aACZ,yBAAKA,UAAU,OACZ,yBAAKA,UAAU,wBACZ,yBACG2B,IAAKC,EACLC,IAAKe,EACLgB,MAAO,CAACC,MAAO,WAElB,4BAAKjB,GACJS,GAAY,oHAAoBA,IAEpC,yBAAKrD,UAAU,OAETsD,GAAO,kBAAC,WAAD,KACJ,mCACA,2BAAIA,IAGV,uBACGb,KAAMC,EACNzB,OAAO,SACP0B,IAAI,sBACJ3C,UAAU,wBAJb,yFAMA,4BACI8B,GAAS,4BACP,8CADO,IACsBA,GAG/BsB,GAAW,4BACT,sFADS,IACoBA,GAG/BG,GAAQ,4BACN,6CADM,IACsBA,IAGlC,yBAAKvD,UAAU,4BAAf,iEAAuDwD,GACvD,yBAAKxD,UAAU,4BAAf,qDAAqDyD,GACrD,yBAAKzD,UAAU,yBAAf,uEAAqD0D,GACrD,yBAAK1D,UAAU,yBAAf,UAA+C2D,OAO3D,6BACG,wBAAI3D,UAAU,QAAd,mHACA,kBAAC,EAAD,CAAOsC,MAAOA,OC9EbwB,EAAQ,WAAO,IAAD,EACFnD,qBAAWR,GAA1BO,EADiB,EACjBA,MAAOY,EADU,EACVA,KAEd,OAAKZ,EAGF,yBAAKV,UAAS,sBAAiBU,EAAMG,MAAQ,YAA/B,sBACTkD,KAAK,SACNrD,EAAMsD,KACP,4BAAQnD,KAAK,SAASb,UAAU,QAAQiE,aAAW,QAAQC,QAAS5C,GACjE,0BAAM6C,cAAY,QAAlB,UAPU,M,OCJhBC,GAAQ,mBCFY,cDGT,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,WAD7B,cCDY,cDGT,kBAAM,QAFT,yBAGF,SAAAF,GAAK,OAAIA,KAHP,GAMDG,EAAe,SAACH,EAAOC,GAEjC,OADgBF,EAASE,EAAOzD,OAASuD,EAASK,SACnCJ,EAAOC,IELZI,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACbC,qBAAWJ,EAAc,MADZ,mBAChCH,EADgC,KACzBQ,EADyB,KAWvC,OACG,kBAAC1E,EAAa2E,SAAd,CAAuBtE,MAAO,CAC3Bc,KAVO,kBAAMuD,EAAS,CAAChE,KDPN,gBCiBXW,KATC,SAACwC,GAA8B,IAAxBnD,EAAuB,uDAAhB,YACxBgE,EAAS,CACNhE,KDXiB,aCYjB0D,QAAS,CAAC1D,OAAMmD,WAMJtD,MAAO2D,IAElBM,I,gDClBJP,GAAQ,mBFGc,gBEFT,SAACC,EAAD,OAASE,EAAT,EAASA,QAAT,sBAA2BF,EAA3B,CAAkCpC,MAAOsC,EAASvC,SAAS,OADhE,cFCW,aECT,SAACqC,EAAD,OAASE,EAAT,EAASA,QAAT,sBAA2BF,EAA3B,CAAkC/B,MAAOiC,EAASvC,SAAS,OAF7D,cFEU,YECT,SAACqC,EAAD,OAASE,EAAT,EAASA,QAAT,sBAA2BF,EAA3B,CAAkC3C,KAAM6C,EAASvC,SAAS,OAH3D,cFIa,eEAT,SAAAqC,GAAK,sBAASA,EAAT,CAAgBrC,SAAQ,OAJjC,cFAa,eEKT,SAAAqC,GAAK,sBAASA,EAAT,CAAgBpC,MAAO,QALhC,yBAMF,SAAAoC,GAAK,OAAIA,KANP,GASDU,EAAgB,SAACV,EAAOC,GAElC,OADgBF,EAASE,EAAOzD,OAASuD,EAASK,SACnCJ,EAAOC,ICJnBU,EAAY,SAAAC,GACf,MAAM,GAAN,OAAUA,EAAV,qBAJeC,uBAIf,0BAHmBA,6CAMTC,EAAc,SAAC,GAAgB,IAAfR,EAAc,EAAdA,SAAc,EAQdC,qBAAWG,EAPhB,CAClBrD,KAAM,GACNO,MAAO,GACPD,SAAS,EACTM,MAAO,KAL8B,mBAQjC+B,EARiC,KAQ1BQ,EAR0B,KAUlCtD,EAAM,uCAAG,WAAMf,GAAN,eAAA4E,EAAA,6DACZC,IADY,SAGWC,IAAMC,IAC1BP,EAAU,yCAAD,OAA0CxE,EAA1C,OAJA,OAGNgF,EAHM,OAOZX,EAAS,CACNhE,KH1BmB,eG2BnB0D,QAASiB,EAASC,KAAKC,QATd,2CAAH,sDAaN3C,EAAO,uCAAG,WAAMH,GAAN,eAAAwC,EAAA,6DACbC,IADa,SAGUC,IAAMC,IAC1BP,EAAU,gCAAD,OAAiCpC,EAAjC,OAJC,OAGP4C,EAHO,OAObX,EAAS,CACNhE,KHxCe,WGyCf0D,QAASiB,EAASC,OATR,2CAAH,sDAaPzC,EAAQ,uCAAG,WAAMJ,GAAN,eAAAwC,EAAA,6DACdC,IADc,SAGSC,IAAMC,IAC1BP,EAAU,gCAAD,OAAiCpC,EAAjC,wBAJE,OAGR4C,EAHQ,OAOdX,EAAS,CACNhE,KHtDgB,YGuDhB0D,QAASiB,EAASC,OATP,2CAAH,sDAeRJ,EAAa,kBAAMR,EAAS,CAAChE,KH1DX,iBG4DjBa,EAA+B2C,EAA/B3C,KAAMO,EAAyBoC,EAAzBpC,MAAOK,EAAkB+B,EAAlB/B,MAAON,EAAWqC,EAAXrC,QAE3B,OACG,kBAAC3B,EAAcyE,SAAf,CAAwBtE,MAAO,CAC5B6E,aAAY9D,SAAQwB,UAASC,WAAU5B,WAR1B,kBAAMyD,EAAS,CAAChE,KH5DX,iBGqElBa,OAAMO,QAAOK,QAAON,YAEnB2C,IC3CKgB,MApBf,WACG,OACG,kBAAC,EAAD,KACG,kBAAC,EAAD,KACG,kBAAC,IAAD,KACG,kBAAC,EAAD,MACA,yBAAK3F,UAAU,kBACZ,kBAAC,EAAD,CAAOU,MAAO,CAAEsD,KAAM,gBACtB,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO4B,KAAK,IAAI3F,OAAK,EAAC4F,UAAW9D,IACjC,kBAAC,IAAD,CAAO6D,KAAK,SAASC,UAAWzD,IAChC,kBAAC,IAAD,CAAOwD,KAAK,iBAAiBC,UAAWhD,UCTzCiD,QACW,cAA7BC,OAAO1C,SAAS2C,UAEe,UAA7BD,OAAO1C,SAAS2C,UAEhBD,OAAO1C,SAAS2C,SAASlD,MACvB,2DCZNmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bbac52ba.chunk.js","sourcesContent":["import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\n\nexport const Navbar = () => (\n   <nav className='navbar navbar-dark bg-primary navbar-expand-lg'>\n      <div className=\"navbar-brand\">\n         GitHub Search\n      </div>\n      <ul className='navbar-nav'>\n         <li className='nav-item'>\n            <NavLink exact to=\"/\" className='nav-link'>Главная</NavLink>\n         </li>\n         <li className='nav-item'>\n            <NavLink to=\"/about\" className='nav-link'>Информация</NavLink>\n         </li>\n      </ul>\n   </nav>\n)","import {createContext} from 'react'\n\nexport const AlertContext = createContext()","import {createContext} from 'react'\n\nexport const GithubContext = createContext()","import React, {useContext, useState} from \"react\"\nimport {AlertContext} from \"../context/alert/alertContext\"\nimport {GithubContext} from \"../context/github/githubContext\"\n\nexport const Search = () => {\n   const [value, setValue] = useState('')\n   const alert = useContext(AlertContext)\n   const github = useContext(GithubContext)\n\n   const onSubmit = event => {\n      if (event.key !== 'Enter') {\n         return\n      }\n\n      github.clearUsers()\n\n      if (value.trim()) {\n         alert.hide()\n         github.search(value.trim())\n      } else {\n         alert.show('Введите данные пользователя!')\n      }\n   }\n   return (\n      <div className='form-group'>\n         <input\n            type=\"text\"\n            className='form-control'\n            placeholder='Введите ник пользователя'\n            value={value}\n            onChange={event => setValue(event.target.value)}\n            onKeyPress={onSubmit}\n         />\n      </div>\n   )\n}","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\n\nexport const Card = ({user}) => (\n   <div className='card'>\n      <img src={user.avatar_url} alt={user.login} className='card-img-top' />\n      <div className='card-body'>\n         <h5 className='card-title'>{user.login}</h5>\n         <Link to={'/profile/' + user.login} className='btn btn-primary'>\n            Открыть\n         </Link>\n\n      </div>\n   </div>\n)","import React, {Fragment, useContext} from \"react\"\nimport {Search} from \"../components/Search\"\nimport {Card} from \"../components/Card\"\nimport {GithubContext} from \"../context/github/githubContext\"\n\nexport const Home = () => {\n   const { loading, users } = useContext(GithubContext)\n\n   return (\n      <Fragment>\n         <Search/>\n         <div className=\"row\">\n            {loading\n               ? <p className='text-center'>Загрузка...</p>\n               : users.map(user => (\n                  <div className=\"col-sm-4 mb-4\" key={user.id}>\n                     <Card user={user}/>\n                  </div>\n               ))\n            }\n\n         </div>\n      </Fragment>\n   )\n}","import React from \"react\"\n\nexport const About = () => {\n   return (\n      <div>\n         <div className=\"jumbotron\">\n            <div className=\"container\">\n               <h1 className=\"display-4\">Информация</h1>\n               <p className=\"lead\">Версия приложения <strong>1.0.0</strong></p>\n            </div>\n         </div>\n      </div>\n   )\n}","import React from \"react\"\n\nexport const Repos = ({repos}) => (\n    <React.Fragment>\n       {repos.map(repo => (\n          <div className='card mb-3' key={repo.id}>\n             <div className=\"card_body\">\n                <h5>\n                   <a\n                      href={repo.html_url}\n                      target='_blank'\n                      rel=\"noopener noreferrer\"\n                   >{repo.name}</a>\n                </h5>\n             </div>\n          </div>\n       ))}\n    </React.Fragment>\n\n)","import React, {useContext, useEffect, Fragment} from \"react\"\nimport {GithubContext} from \"../context/github/githubContext\"\nimport {Link} from \"react-router-dom\"\nimport {Repos} from \"../components/Repos\"\n\nexport const Profile = ({match}) => {\n   const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\n   const urlName = match.params.name\n\n   useEffect(() => {\n      getUser(urlName)\n      getRepos(urlName)\n      // eslint-disable-next-line\n   },[])\n\n   if (loading) {\n      return <p className='text-center'>Заргузка...</p>\n   }\n\n   const {\n      name, company, avatar_url,\n      location, bio, blog,\n      login, html_url, followers,\n      following,public_repos,\n      public_gists\n   } = user\n\n   return (\n      <Fragment>\n         <Link to='/' className='btn btn-link'>На главную</Link>\n\n         <div className=\"card mb-4\">\n            <div className=\"card-body\">\n               <div className=\"row\">\n                  <div className=\"col-sm-3 text-center\">\n                     <img\n                        src={avatar_url}\n                        alt={name}\n                        style={{width: '150px'}}\n                     />\n                     <h3>{name}</h3>\n                     {location && <p>Местоположение: {location}</p>}\n                  </div>\n                  <div className=\"col\">\n                     {\n                        bio && <Fragment>\n                           <h5>BIO</h5>\n                           <p>{bio}</p>\n                        </Fragment>\n                     }\n                     <a\n                        href={html_url}\n                        target='_blank'\n                        rel=\"noopener noreferrer\"\n                        className='btn btn-primary mb-3'\n                     >Открыть профиль</a>\n                     <ul>\n                        {login && <li>\n                           <strong>Username: </strong> {login}\n                        </li>}\n\n                        {company && <li>\n                           <strong>Компания: </strong> {company}\n                        </li>}\n\n                        {blog && <li>\n                           <strong>Website: </strong> {blog}\n                        </li>}\n                     </ul>\n                     <div className=\"badge badge-primary mr-1\">Подписчики: {followers}</div>\n                     <div className=\"badge badge-success mr-1\">Подписан: {following}</div>\n                     <div className=\"badge badge-info mr-1\">Репозитории: {public_repos}</div>\n                     <div className=\"badge badge-dark mr-1\">Gists: {public_gists}</div>\n\n                  </div>\n\n               </div>\n            </div>\n         </div>\n         <div>\n            <h5 className='mb-3'>Список репозиториев: </h5>\n            <Repos repos={repos} />\n         </div>\n      </Fragment>\n   )\n}","import React, {useContext} from \"react\"\nimport {AlertContext} from \"../context/alert/alertContext\"\n\nexport const Alert = () => {\n   const {alert, hide} = useContext(AlertContext)\n\n   if (!alert) return null\n\n   return (\n      <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n           role=\"alert\">\n         {alert.text}\n         <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\n            <span aria-hidden=\"true\">&times;</span>\n         </button>\n      </div>\n   )\n}\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\"\n\nconst handlers = {\n   [SHOW_ALERT]: (state, action) => action.payload,\n   [HIDE_ALERT]: () => null,\n   DEFAULT: state => state\n}\n\nexport const alertReducer = (state, action) => {\n   const handler = handlers[action.type] || handlers.DEFAULT\n   return handler(state, action)\n}","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\nexport const CLEAR_USERS = 'CLEAR_USERS'\nexport const GET_REPOS = 'GET_REPOS'\nexport const GET_USER = 'GET_USER'\nexport const SEARCH_USERS = 'SEARCH_USERS'\nexport const SET_LOADING = 'SET_LOADING'\n","import React, {useReducer} from \"react\"\nimport {AlertContext} from \"./alertContext\"\nimport {alertReducer} from \"./alertReducer\"\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\"\n\nexport const AlertState = ({children}) => {\n   const [state, dispatch] = useReducer(alertReducer, null)\n\n   const hide = () => dispatch({type: HIDE_ALERT})\n   const show = (text, type = 'secondary') => {\n      dispatch({\n         type: SHOW_ALERT,\n         payload: {type, text}\n      })\n   }\n\n   return (\n      <AlertContext.Provider value={{\n         hide, show, alert: state\n      }}>\n         {children}\n      </AlertContext.Provider>\n   )\n}\n\n","import {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\"\n\nconst handlers = {\n   [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\n   [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\n   [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\n   [SET_LOADING]: state => ({...state, loading:true}),\n   [CLEAR_USERS]: state => ({...state, users: []}),\n   DEFAULT: state => state\n}\n\nexport const githubReducer = (state, action) => {\n   const handler = handlers[action.type] || handlers.DEFAULT\n   return handler(state, action)\n}","import React, {useReducer} from \"react\"\nimport axios from 'axios'\nimport {GithubContext} from \"./githubContext\"\nimport {githubReducer} from \"./githubReducer\"\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\"\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\n\nconst withCreds = url => {\n   return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n}\n\nexport const GithubState = ({children}) => {\n   const initialState = {\n      user: {},\n      users: [],\n      loading: false,\n      repos: []\n   }\n\n   const [state, dispatch] = useReducer(githubReducer, initialState)\n\n   const search = async value => {\n      setLoading()\n\n      const response = await axios.get(\n         withCreds(`https://api.github.com/search/users?q=${value}&`)\n      )\n\n      dispatch({\n         type: SEARCH_USERS,\n         payload: response.data.items\n      })\n   }\n\n   const getUser = async name => {\n      setLoading()\n\n      const response = await axios.get(\n         withCreds(`https://api.github.com/users/${name}?`)\n      )\n\n      dispatch({\n         type: GET_USER,\n         payload: response.data\n      })\n   }\n\n   const getRepos = async name => {\n      setLoading()\n\n      const response = await axios.get(\n         withCreds(`https://api.github.com/users/${name}/repos?rep_page=5&`)\n      )\n\n      dispatch({\n         type: GET_REPOS,\n         payload: response.data\n      })\n   }\n\n   const clearUsers = () => dispatch({type: CLEAR_USERS})\n\n   const setLoading = () => dispatch({type: SET_LOADING})\n\n   const {user, users, repos, loading} = state\n\n   return (\n      <GithubContext.Provider value={{\n         setLoading, search, getUser, getRepos, clearUsers,\n         user, users, repos, loading\n      }}>\n         {children}\n      </GithubContext.Provider>\n   )\n}\n","import React from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport {Navbar} from \"./components/Navbar\"\nimport {Home} from \"./pages/Home\"\nimport {About} from \"./pages/About\"\nimport {Profile} from \"./pages/Profile\"\nimport {Alert} from \"./components/Alert\"\nimport {AlertState} from \"./context/alert/AlertState\"\nimport {GithubState} from \"./context/github/GithubState\"\n\nfunction App() {\n   return (\n      <GithubState>\n         <AlertState>\n            <BrowserRouter>\n               <Navbar/>\n               <div className='container pt-4'>\n                  <Alert alert={{ text: 'Test alert' }}/>\n                  <Switch>\n                     <Route path='/' exact component={Home} />\n                     <Route path='/about' component={About} />\n                     <Route path='/profile/:name' component={Profile} />\n                  </Switch>\n               </div>\n            </BrowserRouter>\n         </AlertState>\n      </GithubState>\n   )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}